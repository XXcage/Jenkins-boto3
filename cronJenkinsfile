pipeline {
    agent any
    triggers {
        cron('*/5 * * * *')
    }
    environment {
        imageName = 'rzlinux0/proj3:latest'
        jobName = 'Dockerfile'
    }
    stages {
        stage('Get Last Successful Build') {
            steps {
                script {
                    def permalinksFile = "../../jobs/${env.jobName}/builds/permalinks"
                    env.lastSuccessfulBuildNum = sh(script: "cat ${permalinksFile} | grep lastSuccessfulBuild | awk '{print \$2}'", returnStdout: true).trim()
                    echo "Last successful build of ${env.jobName} is #${env.lastSuccessfulBuildNum}"
                }
            }
        }
        stage('Run Latest Docker Image') {
            steps {
                script {
                    def latestImage = "${env.imageName}:${env.lastSuccessfulBuildNum}"                    
                    docker.image(latestImage).pull()
                    docker.image(latestImage).run()
                }
            }
        }
    }
}
