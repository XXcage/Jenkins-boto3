pipeline {
    agent any
    triggers {
        cron('*/5 * * * *')
    }
    environment {
        imageName = 'rzlinux0/proj3'
        jobName = 'Dockerfile'
    }
    stages {
        stage('Get Last Successful Build') {
            steps {
                script {
                    def permalinksFile = "../../jobs/${env.jobName}/builds/permalinks"
                    env.lastSuccessfulBuildNum = sh(script: "cat ${permalinksFile} | grep lastSuccessfulBuild | awk '{print \$2}'", returnStdout: true).trim()
                    echo "Last successful build of ${env.jobName} is #${env.lastSuccessfulBuildNum}"
                }
            }
        }
        stage('DockerHub Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DockerHubID', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                }
            }
        }
        stage('Run Latest Docker Image') {
            steps {
                script {
                    def latestImage = "${env.imageName}:${env.lastSuccessfulBuildNum}"      
                    echo "latest image is $latestImage"
                    sh "docker pull ${latestImage}"
                    sh "docker run ${latestImage}"
                }
            }
        }
    }
}
