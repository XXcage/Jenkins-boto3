    pipeline {
        agent any
        triggers {
            cron('*/5 * * * *')
        }
        environment {
            imageName = 'rzlinux0/proj3-consul'
            jobName = 'Consul-Intergration'
        }
        stages {
            stage('Get Last Successful Build') {
                steps {
                    script {
                        def permalinksFile = "../../jobs/${env.jobName}/builds/permalinks"
                        env.lastSuccessfulBuildNum = sh(script: "cat ${permalinksFile} | grep lastSuccessfulBuild | awk '{print \$2}'", returnStdout: true).trim()
                        env.latestImage = "${env.imageName}:${env.lastSuccessfulBuildNum}"      
                    }
                }
            }
            stage('DockerHub login') {
                steps {
                    script {
                        // Fetch DockerHub username and password from Consul
                        env.DOCKERHUB_USERNAME = sh(returnStdout: true, script: 'consul kv get -http-addr=http://172.17.0.4:8500 dockerhub/DOCKER_USERNAME').trim()
                        env.DOCKERHUB_PASSWORD = sh(returnStdout: true, script: 'consul kv get -http-addr=http://172.17.0.4:8500 dockerhub/DOCKER_PASSWORD').trim()
                        sh "docker login -u ${env.DOCKERHUB_USERNAME} -p ${env.DOCKERHUB_PASSWORD} https://index.docker.io/v1/"
                    }
                }
            }
            stage('Run Latest Docker Image') {
                steps {
                    script {
                        sh "docker pull ${env.latestImage}"
                        sh "docker run ${env.latestImage}"
                    }
                }
            }
        }
    }
 
